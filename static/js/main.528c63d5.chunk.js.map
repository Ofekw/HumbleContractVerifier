{"version":3,"sources":["components/Dropdown.tsx","utils/validator.ts","components/AddressInput.tsx","components/ConnectWallet.tsx","components/BalanceCard.tsx","components/BalanceTotal.tsx","components/Error.tsx","utils/constants.ts","utils/exchange.ts","utils/unit.ts","utils/token.ts","utils/calculate.ts","components/BalanceDetails.tsx","components/Donate.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dropdown","callback","presets","className","name","onChange","e","target","value","map","preset","address","validateAddress","text","Web3","utils","isAddress","AddressInput","placeholder","label","defaultValue","useState","setAddress","valid","setValid","useEffect","validAddress","newValue","injectedConnector","InjectedConnector","supportedChainIds","ConnectWallet","children","useWeb3React","activate","active","account","error","btnText","setBtnText","btnClass","setBtnClass","UnsupportedChainIdError","ellisizeText","substring","length","onClick","disabled","numberWithCommas","x","replace","BalanceCard","balance","_tokenAAmount","tokenA","amount","dividedBy","decimals","toFixed","tokenAAmount","parseFloat","_tokenBAmount","tokenB","tokenBAmount","worth","renderBalanceLP","_tokenAmount","token","tokenAmount","renderBalance","BalanceTotal","balances","reduce","acc","calculate","toString","Error","MATIC","USDC","masterChefPresets","routerPresets","factoryAbi","require","router","pairAbi","Exchange","exchangeRouterAddress","web3","exchangeContract","exchangeFactoryAddress","provider","providers","HttpProvider","timeout","this","eth","Contract","a","getReserves","reserveA","reserveB","methods","getAmountOut","call","factory","getPair","pair","pairContract","reserveTokenA","reserveTokenB","token0","then","toLowerCase","weiToUSDC","wei","fromWei","erc20","stablecoins","isLP","lp","contractLP","lpAddress","routerContractAddress","calculateBalanceLP","calculateBalance","totalSupply","tokenAmountA","BigNumber","multipliedBy","tokenAmountB","tokenAContract","symbol","tokenASymbol","tokenADecimals","token1","tokenBContract","tokenBSymbol","tokenBDecimals","indexOf","exchange","bnb","bnbAmount","getEquivalentToken","integerValue","busdAmount","_worth","stablecoin","stablecoinAmount","contract","tokenSymbol","tokenDecimals","_tokenAddress","div","masterape","contractAddress","poolLength","_poolLength","Promise","all","Array","parseInt","item","poolId","userInfo","_userInfoResults","_balances","result","pool","filter","b","poolInfo","_balancesLP","_balanceLPPair","completeBalance","BalanceDetails","setBalances","fetching","setFetching","retryNumber","setRetryNumber","invalidContract","setInvalidContract","refreshCallback","useCallback","refresh","promiseRetry","retry","number","queryContract","catch","console","log","message","finally","balanceDetails","renderOrError","Donate","wa","window","ethereum","transactionParameters","gasPrice","gas","to","from","selectedAddress","request","method","params","Footer","showDonate","getLibrary","connector","App","setContractAddress","routercontractAddress","setRouterContractAddress","localStorage","getItem","showDetails","setShowDetails","icon","faSearchDollar","_address","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528c63d5.chunk.js","sourcesContent":["import \"../styles/Dropdown.css\";\r\nimport { ContractPreset } from \"../types\";\r\n\r\ninterface DropdownProps {\r\n  callback: React.Dispatch<React.SetStateAction<string>>;\r\n  presets: ContractPreset[];\r\n}\r\n\r\nfunction Dropdown({ callback, presets }: DropdownProps) {\r\n  function onChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    callback(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <select name=\"contract\" onChange={onChange}>\r\n        {presets.map((preset) => {\r\n          return <option key={preset.name} value={preset.address}>{preset.name}</option>;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import Web3 from \"web3\";\r\n\r\nexport function validateAddress(text: string) {\r\n  return Web3.utils.isAddress(text);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/AddressInput.css\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport { ContractPreset } from \"../types\";\r\nimport { validateAddress } from \"../utils/validator\";\r\n\r\ninterface AddressInputProps {\r\n  placeholder: string;\r\n  label: string;\r\n  defaultValue?: string;\r\n  presets?: ContractPreset[];\r\n  callback:\r\n    | React.Dispatch<React.SetStateAction<string>>\r\n    | ((value: string) => void);\r\n}\r\n\r\nfunction AddressInput({\r\n  placeholder,\r\n  label,\r\n  defaultValue,\r\n  presets,\r\n  callback,\r\n}: AddressInputProps) {\r\n  const [address, setAddress] = useState(defaultValue || \"\");\r\n  const [valid, setValid] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue) {\r\n      const validAddress = validateAddress(defaultValue);\r\n      setValid(validAddress);\r\n    }\r\n\r\n    if (validateAddress(address)) {\r\n      callback(address);\r\n    }\r\n  }, [defaultValue, address, callback]);\r\n\r\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const newValue = e.target.value;\r\n    const validAddress = validateAddress(newValue);\r\n    setValid(validAddress);\r\n    setAddress(newValue);\r\n    if (validAddress) {\r\n      callback(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"address-input-header\">\r\n        <label className=\"address-input-label\">{label}</label>\r\n        {presets && <Dropdown callback={setAddress} presets={presets} />}\r\n      </div>\r\n      <div className=\"address-input-container\">\r\n        <input\r\n          className={\r\n            valid ? \"address-input\" : \"address-input address-input-invalid\"\r\n          }\r\n          value={address}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport \"../styles/ConnectWallet.css\";\r\n\r\ninterface ConnectWalletProps {\r\n  children: React.ReactNode;\r\n  callback: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst injectedConnector = new InjectedConnector({\r\n  supportedChainIds: [137],\r\n});\r\n\r\nfunction ConnectWallet({ children, callback }: ConnectWalletProps) {\r\n  const { activate, active, account, error } = useWeb3React<Web3Provider>();\r\n  const [btnText, setBtnText] = useState(children);\r\n  const [btnClass, setBtnClass] = useState(\"connect-wallet-btn\");\r\n\r\n  useEffect(() => {\r\n    if (error && error instanceof UnsupportedChainIdError) {\r\n      setBtnText(\"Supported only Polygon chain (137).\");\r\n      setBtnClass(\"connect-wallet-btn connect-wallet-btn-error\");\r\n    } else if (account) {\r\n      setBtnClass(\"connect-wallet-btn\");\r\n      const ellisizeText =\r\n        account.substring(0, 6) +\r\n        \"...\" +\r\n        account.substring(account.length - 4, account.length);\r\n      setBtnText(ellisizeText);\r\n      callback(account);\r\n    } else {\r\n      setBtnClass(\"connect-wallet-btn\");\r\n      setBtnText(children);\r\n    }\r\n  }, [account, activate, active, callback, children, error]);\r\n\r\n  function handleClick(e: React.MouseEvent<HTMLDivElement>) {\r\n    activate(injectedConnector);\r\n  }\r\n\r\n  return (\r\n    <div className=\"connect-wallet-container\" onClick={handleClick}>\r\n      {!active ? (\r\n        <button className={btnClass} disabled={active}>\r\n          {btnText}\r\n        </button>\r\n      ) : (\r\n        <p>{btnText}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectWallet;\r\n","import React from \"react\";\r\nimport { Balance, BalanceLP } from \"../types\";\r\n\r\ninterface BalanceCardProps {\r\n  balance: Balance | BalanceLP;\r\n}\r\n\r\nfunction numberWithCommas(x: string) {\r\n  return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction BalanceCard({ balance }: BalanceCardProps) {\r\n  function renderBalance(balance: Balance) {\r\n    const _tokenAmount = balance.token.amount\r\n      .dividedBy(10 ** balance.token.decimals)\r\n      .toFixed();\r\n    const tokenAmount = parseFloat(_tokenAmount).toFixed(2);\r\n    return (\r\n      <div className=\"balance-card-container\">\r\n        <div className=\"balance-card-pair-name\">{balance.token.name}</div>\r\n        <div className=\"balance-card-pair-amount\">\r\n          {tokenAmount} {balance.token.name}\r\n        </div>\r\n        <div className=\"balance-card-pair-value\">\r\n          {numberWithCommas(balance.worth)} USD\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderBalanceLP(balance: BalanceLP) {\r\n    const _tokenAAmount = balance.tokenA.amount\r\n      .dividedBy(10 ** balance.tokenA.decimals)\r\n      .toFixed();\r\n    const tokenAAmount = parseFloat(_tokenAAmount).toFixed(2);\r\n\r\n    const _tokenBAmount = balance.tokenB.amount\r\n      .dividedBy(10 ** balance.tokenB.decimals)\r\n      .toFixed();\r\n    const tokenBAmount = parseFloat(_tokenBAmount).toFixed(2);\r\n    return (\r\n      <div className=\"balance-card-container\">\r\n        <div className=\"balance-card-pair-name\">\r\n          {balance.tokenA.name}/{balance.tokenB.name}\r\n        </div>\r\n        <div className=\"balance-card-pair-amount\">\r\n          {tokenAAmount} {balance.tokenA.name} / {tokenBAmount}{\" \"}\r\n          {balance.tokenB.name}\r\n        </div>\r\n        <div className=\"balance-card-pair-value\">\r\n          {numberWithCommas(balance.worth)} USD\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (instanceOfBalanceLP(balance)) {\r\n    return renderBalanceLP(balance);\r\n  } else {\r\n    return renderBalance(balance);\r\n  }\r\n}\r\n\r\nfunction instanceOfBalanceLP(data: any): data is BalanceLP {\r\n  return \"tokenA\" in data;\r\n}\r\n\r\nexport default BalanceCard;\r\n","import React from \"react\";\r\nimport { Balance, BalanceLP } from \"../types\";\r\n\r\ninterface BalanceTotalProps {\r\n  balances: (Balance | BalanceLP)[];\r\n}\r\n\r\nfunction numberWithCommas(x: string|number) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction BalanceTotal({ balances }: BalanceTotalProps) {\r\n  const calculate = (balances: (Balance | BalanceLP)[]) => {\r\n    return balances.reduce(\r\n      (acc: number, balance: Balance | BalanceLP) =>\r\n        parseFloat(balance.worth) + acc,\r\n      0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"balance-total-container\">\r\n      <div className=\"balance-total-title\">Total worth</div>\r\n      <div className=\"balance-total-value\">\r\n        {numberWithCommas(parseFloat(calculate(balances).toFixed(2)))} USD\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BalanceTotal;\r\n","import React from \"react\";\r\nimport \"../styles/Error.css\";\r\n\r\ninterface ErrorProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nfunction Error({ children }: ErrorProps) {\r\n  return <div className=\"error-container\">{children}</div>;\r\n}\r\n\r\nexport default Error;\r\n","export const PANCAKE_ROUTER = \"0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff\";\r\nexport const MATIC = \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\";\r\nexport const USDC = \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\";\r\nexport const masterChefPresets = [\r\n];\r\n\r\nexport const routerPresets = [\r\n  {\r\n    name: \"QuickSwap\",\r\n    address: \"0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff\",\r\n  }\r\n];\r\n","import Web3 from \"web3\";\r\nimport { Contract } from \"web3-eth-contract\";\r\n\r\nconst factoryAbi = require(\"../abis/factory.json\");\r\nconst router = require(\"../abis/router.json\");\r\nconst pairAbi = require(\"../abis/pair.json\");\r\n\r\nexport default class Exchange {\r\n  private web3: Web3;\r\n  private exchangeContract: Contract;\r\n  private exchangeFactoryAddress: string = \"\";\r\n  private exchangeRouterAddress: string;\r\n\r\n  constructor(exchangeRouterAddress: string) {\r\n    const provider = new Web3.providers.HttpProvider(\"https://rpc-mainnet.maticvigil.com/\", {\r\n      timeout: 120000\r\n    })\r\n    this.web3 = new Web3(provider);\r\n    this.exchangeContract = new this.web3.eth.Contract(\r\n      router,\r\n      exchangeRouterAddress\r\n    );\r\n    this.exchangeRouterAddress = exchangeRouterAddress;\r\n  }\r\n\r\n  async getEquivalentToken(tokenA: string, tokenB: string, amount: string) {\r\n    const [reserveA, reserveB] = await this.getReserves(tokenA, tokenB);\r\n    return this.exchangeContract.methods\r\n      .getAmountOut(amount, reserveA, reserveB)\r\n      .call();\r\n  }\r\n\r\n  async getReserves(tokenA: string, tokenB: string) {\r\n    if (!this.exchangeFactoryAddress) {\r\n      this.exchangeFactoryAddress = await this.exchangeContract.methods\r\n        .factory()\r\n        .call();\r\n    }\r\n\r\n    const factory = new this.web3.eth.Contract(\r\n      factoryAbi,\r\n      this.exchangeFactoryAddress\r\n    );\r\n    const pair = await factory.methods.getPair(tokenA, tokenB).call();\r\n    const pairContract = new this.web3.eth.Contract(pairAbi, pair);\r\n    const {\r\n      \"0\": reserveTokenA,\r\n      \"1\": reserveTokenB,\r\n    } = await pairContract.methods.getReserves().call();\r\n    const token0 = await pairContract.methods\r\n      .token0()\r\n      .call()\r\n      .then((token: string) => token.toLowerCase());\r\n\r\n    return [\r\n      token0 === tokenA ? reserveTokenA : reserveTokenB,\r\n      token0 === tokenA ? reserveTokenB : reserveTokenA,\r\n    ];\r\n  }\r\n}\r\n","import Web3 from 'web3';\r\n\r\nexport function ethToWei(eth: string): string {\r\n  return Web3.utils.toWei(eth);\r\n}\r\n\r\nexport function weiToEth(wei: string): string {\r\n  return Web3.utils.fromWei(wei);\r\n}\r\n\r\nexport function weiToUSDC(wei: string): string {\r\n  return Web3.utils.fromWei(wei, 'mwei');\r\n}\r\n\r\nexport function usdtToWei(usdt: string): string {\r\n  return Web3.utils.toWei(usdt, 'mwei');\r\n}\r\n\r\nexport function gweiToWei(gwei: string): string {\r\n  return Web3.utils.toWei(gwei, 'gwei');\r\n}\r\n","import Web3 from \"web3\";\r\nimport { BalanceLP, BaseBalance, Balance } from \"../types\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { MATIC, USDC} from \"./constants\";\r\nimport Exchange from \"./exchange\";\r\nimport { weiToUSDC } from \"./unit\";\r\n\r\nconst pair = require(\"../abis/pair.json\");\r\nconst erc20 = require(\"../abis/erc20.json\");\r\n\r\nconst stablecoins = [USDC];\r\n\r\nasync function isLP(web3: Web3, lp: BaseBalance) {\r\n  const contractLP = new web3.eth.Contract(pair, lp.lpAddress);\r\n  try {\r\n    await contractLP.methods.getReserves().call();\r\n    return true;\r\n  } catch (e: any) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function calculate(\r\n  web3: Web3,\r\n  lp: BaseBalance,\r\n  routerContractAddress: string\r\n): Promise<Balance | BalanceLP> {\r\n  const _isLP = await isLP(web3, lp);\r\n  if (_isLP) {\r\n    return calculateBalanceLP(web3, lp, routerContractAddress);\r\n  } else {\r\n    return calculateBalance(web3, lp, routerContractAddress);\r\n  }\r\n}\r\n\r\n// Support tokens pair staking\r\nasync function calculateBalanceLP(\r\n  web3: Web3,\r\n  lp: BaseBalance,\r\n  routerContractAddress: string\r\n): Promise<BalanceLP> {\r\n  const contractLP = new web3.eth.Contract(pair, lp.lpAddress);\r\n  const totalSupply = await contractLP.methods.totalSupply().call();\r\n  const {\r\n    \"0\": reserveA,\r\n    \"1\": reserveB,\r\n  } = await contractLP.methods.getReserves().call();\r\n  const tokenAmountA = new BigNumber(lp.balance)\r\n    .dividedBy(totalSupply)\r\n    .multipliedBy(reserveA);\r\n\r\n  const tokenAmountB = new BigNumber(lp.balance)\r\n    .dividedBy(totalSupply)\r\n    .multipliedBy(reserveB);\r\n\r\n  const tokenA = await contractLP.methods\r\n    .token0()\r\n    .call()\r\n    .then((token: string) => token.toLowerCase());\r\n  const tokenAContract = new web3.eth.Contract(erc20, tokenA);\r\n  const tokenASymbol = await tokenAContract.methods.symbol().call();\r\n  const tokenADecimals = await tokenAContract.methods.decimals().call();\r\n\r\n  const tokenB = await contractLP.methods\r\n    .token1()\r\n    .call()\r\n    .then((token: string) => token.toLowerCase());\r\n  const tokenBContract = new web3.eth.Contract(erc20, tokenB);\r\n  const tokenBSymbol = await tokenBContract.methods.symbol().call();\r\n  const tokenBDecimals = await tokenBContract.methods.decimals().call();\r\n\r\n  let worth: string = \"0\";\r\n  if (\r\n    stablecoins.indexOf(tokenA) === -1 &&\r\n    stablecoins.indexOf(tokenB) === -1\r\n  ) {\r\n    const exchange = new Exchange(routerContractAddress);\r\n    if (tokenA === MATIC || tokenB === MATIC) {\r\n      const bnb = tokenA === MATIC ? tokenA : tokenB;\r\n      const bnbAmount = tokenA === MATIC ? tokenAmountA : tokenAmountB;\r\n      const busdAmount = await exchange.getEquivalentToken(\r\n        bnb,\r\n        USDC,\r\n        bnbAmount.integerValue().toFixed()\r\n      );\r\n      const _worth = new BigNumber(2)\r\n        .multipliedBy(busdAmount)\r\n        .integerValue()\r\n        .toFixed();\r\n      worth = parseFloat(weiToUSDC(_worth)).toFixed(2);\r\n    } else {\r\n      const stablecoin = stablecoins.indexOf(tokenA) > -1 ? tokenA : tokenB;\r\n      const token = stablecoin === tokenA ? tokenB : tokenA;\r\n      const tokenAmount = token === tokenA ? tokenAmountA : tokenAmountB;\r\n      const busdAmount = await exchange.getEquivalentToken(\r\n        token,\r\n        stablecoin,\r\n        tokenAmount.integerValue().toFixed()\r\n      );\r\n      const _worth = new BigNumber(2)\r\n        .multipliedBy(busdAmount)\r\n        .integerValue()\r\n        .toFixed();\r\n      worth = parseFloat(weiToUSDC(_worth)).toFixed(2);\r\n    }\r\n  } else {\r\n    const stablecoin = stablecoins.indexOf(tokenA) > -1 ? tokenA : tokenB;\r\n    const stablecoinAmount =\r\n      tokenA === stablecoin ? tokenAmountA : tokenAmountB;\r\n    const _worth = new BigNumber(2)\r\n      .multipliedBy(stablecoinAmount)\r\n      .integerValue()\r\n      .toFixed();\r\n    worth = parseFloat(weiToUSDC(_worth)).toFixed(2);\r\n  }\r\n\r\n  return {\r\n    ...lp,\r\n    tokenA: {\r\n      name: tokenASymbol,\r\n      amount: tokenAmountA,\r\n      decimals: tokenADecimals,\r\n    },\r\n    tokenB: {\r\n      name: tokenBSymbol,\r\n      amount: tokenAmountB,\r\n      decimals: tokenBDecimals,\r\n    },\r\n    worth,\r\n  };\r\n}\r\n\r\n// Support single token staking\r\nasync function calculateBalance(\r\n  web3: Web3,\r\n  lp: BaseBalance,\r\n  routerContractAddress: string\r\n): Promise<Balance> {\r\n  const contract = new web3.eth.Contract(erc20, lp.lpAddress);\r\n  const tokenSymbol = await contract.methods.symbol().call();\r\n  const tokenDecimals = await contract.methods.decimals().call();\r\n  const tokenAmount = lp.balance;\r\n  const token = {\r\n    name: tokenSymbol,\r\n    amount: new BigNumber(tokenAmount),\r\n    decimals: tokenDecimals,\r\n  };\r\n\r\n  let worth = \"0\";\r\n\r\n  const _tokenAddress = lp.lpAddress.toLowerCase();\r\n\r\n  if ([USDC].indexOf(_tokenAddress) > -1) {\r\n    worth = parseFloat(weiToUSDC(lp.balance)).toFixed(2);\r\n  } else {\r\n    const exchange = new Exchange(routerContractAddress);\r\n    const [reserveA, reserveB] = await exchange.getReserves(\r\n      _tokenAddress,\r\n      USDC\r\n    );\r\n    const busdAmount = new BigNumber(reserveB)\r\n      .div(reserveA)\r\n      .multipliedBy(tokenAmount)\r\n      .integerValue()\r\n      .toFixed();\r\n    worth = parseFloat(weiToUSDC(busdAmount)).toFixed(2);\r\n  }\r\n  return {\r\n    ...lp,\r\n    token,\r\n    worth,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { BalanceLP, Balance } from \"../types\";\r\nimport { calculate } from \"./token\";\r\nconst masterape = require(\"../abis/masterape.json\");\r\n\r\nexport async function queryContract(\r\n  routerContractAddress: string,\r\n  callback: React.Dispatch<React.SetStateAction<(Balance | BalanceLP)[]>>,\r\n  account?: string | null | undefined,\r\n  contractAddress?: string\r\n) {\r\n  if (!account) return;\r\n  if (!contractAddress) return;\r\n\r\n  const provider = new Web3.providers.HttpProvider(\r\n    \"https://rpc-mainnet.maticvigil.com/\",\r\n    {\r\n      timeout: 120000,\r\n    }\r\n  );\r\n  const web3 = new Web3(provider);\r\n  const contract = new web3.eth.Contract(masterape, contractAddress);\r\n  const _poolLength = await contract.methods.poolLength().call();\r\n\r\n  const _userInfoResults = await Promise.all(\r\n    [...Array(parseInt(_poolLength))].map((item, poolId) => contract.methods.userInfo(poolId, account).call()\r\n    )\r\n  );\r\n\r\n  const _balances = _userInfoResults\r\n    .map((result, poolId) => {\r\n      const balance = result[\"0\"];\r\n      return { pool: poolId, balance };\r\n    })\r\n    .filter((b) => b.balance !== \"0\");\r\n\r\n  const _balancesLP = await Promise.all(\r\n    _balances.map(async (b) => {\r\n      const { \"0\": lpAddress } = await contract.methods.poolInfo(b.pool).call();\r\n\r\n      return { ...b, lpAddress };\r\n    })\r\n  );\r\n\r\n  const _balanceLPPair = _balancesLP.map(async (lp) => {\r\n    return calculate(web3, lp, routerContractAddress);\r\n  });\r\n\r\n  const completeBalance = await Promise.all(_balanceLPPair);\r\n\r\n  callback(completeBalance);\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"../styles/BalanceDetails.css\";\r\nimport \"../styles/BalanceCard.css\";\r\nimport \"../styles/BalanceTotal.css\";\r\nimport { BalanceLP, Balance } from \"../types\";\r\nimport BalanceCard from \"../components/BalanceCard\";\r\nimport BalanceTotal from \"../components/BalanceTotal\";\r\nimport Error from \"../components/Error\";\r\nimport promiseRetry from \"promise-retry\";\r\nimport { queryContract } from \"../utils/calculate\";\r\n\r\ninterface BalanceDetailsProps {\r\n  contractAddress: string;\r\n  routerContractAddress: string;\r\n  address: string\r\n}\r\n\r\nfunction BalanceDetails({\r\n  contractAddress,\r\n  routerContractAddress,\r\n  address\r\n}: BalanceDetailsProps) {\r\n  const [balances, setBalances] = useState<(BalanceLP | Balance)[]>([]);\r\n  const [fetching, setFetching] = useState<boolean>(false);\r\n  const [retryNumber, setRetryNumber] = useState<number>(0);\r\n  const [invalidContract, setInvalidContract] = useState(false);\r\n\r\n  const refreshCallback = useCallback(refresh, [\r\n    address,\r\n    contractAddress,\r\n    routerContractAddress,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    refreshCallback();\r\n  }, [refreshCallback]);\r\n\r\n  function renderOrError() {\r\n    const balanceDetails = balances.map((b) => (\r\n      <BalanceCard key={b.lpAddress} balance={b} />\r\n    ));\r\n    if (fetching) {\r\n      return (\r\n        <p className=\"balance-details-status\">\r\n          Fetching data from the staking pool...{\" \"}\r\n          {retryNumber ? <span>(Retry: {retryNumber})</span> : \"\"}\r\n        </p>\r\n      );\r\n    } else if (invalidContract) {\r\n      return <Error>Invalid Contract</Error>;\r\n    } else if (balanceDetails.length === 0) {\r\n      return (\r\n        <p className=\"balance-details-status\">\r\n          There're no LPs in the given staking contract.\r\n        </p>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {balanceDetails}\r\n          {<BalanceTotal balances={balances} />}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  function refresh() {\r\n    setFetching(true);\r\n    setInvalidContract(false);\r\n    promiseRetry(function (retry, number) {\r\n      setRetryNumber(number - 1);\r\n      return queryContract(\r\n        routerContractAddress,\r\n        setBalances,\r\n        address,\r\n        contractAddress\r\n      ).catch((e: any) => {\r\n        console.log(e)\r\n        if (e.message.indexOf(\"Invalid JSON RPC response\") > -1) {\r\n          retry(e);\r\n        } else if (e.message.indexOf(\"the correct ABI for the contract\") > -1) {\r\n          setInvalidContract(true);\r\n        }\r\n      });\r\n    }).finally(() => {\r\n      setFetching(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"balance-details-container\">\r\n      <h2>\r\n        Staking Details{\" \"}\r\n        {!fetching && <button onClick={refresh}>Refresh</button>}\r\n      </h2>\r\n      <div className=\"balance-details-content-container\">{renderOrError()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BalanceDetails;\r\n","import React from \"react\";\r\nimport \"../styles/Donate.css\";\r\n\r\nfunction Donate() {\r\n  async function donate() {\r\n    const wa: any = window;\r\n    const ethereum = wa.ethereum;\r\n\r\n    if (ethereum) {\r\n      const transactionParameters = {\r\n        gasPrice: \"0x2540BE400\",\r\n        gas: \"0xC350\",\r\n        to: \"0x81F35AddfD52da15f227bc803725de3bBcb96743\",\r\n        from: ethereum.selectedAddress,\r\n        value: \"0x16345785D8A0000\",\r\n      };\r\n\r\n      await ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params: [transactionParameters],\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"donate-container\">\r\n      <button onClick={donate}>Donate to the party</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Donate;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\nimport Donate from \"./Donate\";\r\n\r\ninterface FooterProps {\r\n  showDonate: boolean;\r\n}\r\n\r\nfunction Footer({ showDonate }: FooterProps) {\r\n\r\n  return (\r\n    <footer className=\"footer-container\">\r\n      {showDonate && <Donate />}\r\n      <p>\r\n        How much is my LP worth? by <b>Newbieshwa 🎉</b> (forked from nopantytonight) \r\n      </p>\r\n      <p>\r\n      The source code is licensed MIT.\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/constants.css\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport AddressInput from \"./components/AddressInput\";\r\nimport ConnectWallet from \"./components/ConnectWallet\";\r\nimport BalanceDetails from \"./components/BalanceDetails\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearchDollar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Web3 from \"web3\";\r\nimport {\r\n  masterChefPresets,\r\n  PANCAKE_ROUTER,\r\n  routerPresets,\r\n} from \"./utils/constants\";\r\n\r\nfunction getLibrary(provider: any, connector?: any) {\r\n  return new Web3(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\n\r\nconst wa: any = window;\r\n\r\nfunction App() {\r\n  const [contractAddress, setContractAddress] = useState(\"\");\r\n  const [routercontractAddress, setRouterContractAddress] = useState(\r\n    PANCAKE_ROUTER\r\n  );\r\n  const [address, setAddress] = useState<string>(\r\n    wa.web3 ? \"\" : localStorage.getItem(\"address\") || \"\"\r\n  );\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setShowDetails(contractAddress !== \"\" && routercontractAddress !== \"\");\r\n\r\n    return () => {\r\n      setShowDetails(false);\r\n    };\r\n  }, [routercontractAddress, contractAddress, showDetails]);\r\n\r\n  function updateWalletAddress(_address: string) {\r\n    setAddress(_address);\r\n    localStorage.setItem(\"address\", _address);\r\n  }\r\n\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <div className=\"app-container\">\r\n        <div className=\"app-content-container\">\r\n          <div className=\"app-header\">\r\n            <div className=\"app-header-left\">\r\n              <FontAwesomeIcon icon={faSearchDollar} className=\"app-icon\" />\r\n              <h1>How much is my LP worth? POLY / MATIC edition ✨</h1>\r\n            </div>\r\n            {wa.web3 && (\r\n              <ConnectWallet callback={setAddress}>Connect</ConnectWallet>\r\n            )}\r\n          </div>\r\n          {address || !wa.web3 ? (\r\n            <>\r\n              {!wa.web3 && (\r\n                <AddressInput\r\n                  placeholder=\"Enter your address\"\r\n                  label=\"Your address\"\r\n                  defaultValue={address}\r\n                  callback={updateWalletAddress}\r\n                />\r\n              )}\r\n              <AddressInput\r\n                placeholder=\"Enter Masterchef address\"\r\n                label=\"MasterChef address\"\r\n                presets={masterChefPresets}\r\n                callback={setContractAddress}\r\n              />\r\n              <AddressInput\r\n                placeholder=\"Enter Router address\"\r\n                label=\"Router address (default to Pancakeswap)\"\r\n                defaultValue={routercontractAddress}\r\n                presets={routerPresets}\r\n                callback={setRouterContractAddress}\r\n              />\r\n              <div className=\"app-details-section\">\r\n                {showDetails ? (\r\n                  <BalanceDetails\r\n                    address={address}\r\n                    contractAddress={contractAddress}\r\n                    routerContractAddress={routercontractAddress}\r\n                  />\r\n                ) : (\r\n                  <p>Fill contract addresses above to see details here.</p>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p className=\"app-connect-wallet-first\">\r\n              Connect wallet to use the app.\r\n            </p>\r\n          )}\r\n          <Footer showDonate={address !== \"\"} />\r\n        </div>\r\n      </div>\r\n    </Web3ReactProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport \"./styles/constants.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}